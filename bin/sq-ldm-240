#!/usr/bin/env python

# standard dependencies
import argparse
import textwrap

# in-house modules
import lsst.sqre.jirakit as jirakit  # helper code
from lsst.sqre.jira2txt import jira2txt

QUERY = 'project = DLP AND issuetype = Milestone ORDER BY WBS ASC, fixVersion DESC',

# argument parsing and default options
parser = argparse.ArgumentParser(
    prog='sq-ldm-240',
    formatter_class=argparse.RawDescriptionHelpFormatter,
    description=textwrap.dedent('''

    Generate LDM-240 style tables from the LSST DLP JIRA project

    To import into excel, redirect output to a file:

        sq-ldm-240 > foo.txt

    And then import it in excel as a text file, specifying the
    pipe character (|) as the separator.

    '''),
    epilog='Part of jirakit: https://github.com/lsst-sqre/sqre-jirakit'
)

parser.add_argument('-s', '--server',
                    default=jirakit.SERVER,
                    help='JIRA server URL')

parser.add_argument('-k', '--key',
                    action='store_true',
                    default=False,
                    help='Show the JIRA issue key in the table cell (default behaviour)')

parser.add_argument('-t', '--title',
                    action='store_true',
                    default=False,
                    help='Show the JIRA issue title in the table cell (can combine with -k)')

parser.add_argument('-c', '--csv',
                    action='store_true',
                    default=False,
                    help='Output as CSV format')

parser.add_argument('--no-url',
                    action='store_true',
                    default=False,
                    help='Do not include hyperlinks in CSV outputput')

parser.add_argument('-v', '--version', action='version', version='%(prog)s 0.5')

if __name__ == "__main__":
    opt = parser.parse_args()
    jira2txt(opt.server, QUERY, make_csv=opt.csv, show_key=opt.key,
             show_title=opt.title, show_url=not opt.no_url)
